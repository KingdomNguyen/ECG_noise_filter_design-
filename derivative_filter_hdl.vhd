-- -------------------------------------------------------------
-- 
-- File Name: D:\codegen\derivative_filter_algorithm\hdlsrc\derivative_filter_algorithm_fixpt.vhd
-- Created: 2025-05-11 03:00:50
-- 
-- Generated by MATLAB 24.2, MATLAB Coder 24.2 and HDL Coder 24.2
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- filtered_output               ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: derivative_filter_algorithm_fixpt
-- Source Path: derivative_filter_algorithm_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY derivative_filter_algorithm_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        input_signal                      :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En12
        ce_out                            :   OUT   std_logic;
        filtered_output                   :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En12
        );
END derivative_filter_algorithm_fixpt;


ARCHITECTURE rtl OF derivative_filter_algorithm_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s                                : unsigned(13 DOWNTO 0);  -- ufix14_En14
  SIGNAL input_signal_signed              : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL s_1                              : signed(13 DOWNTO 0);  -- sfix14_En13
  SIGNAL x_prev                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL s_2                              : signed(13 DOWNTO 0);  -- sfix14_En13
  SIGNAL tmp                              : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL y_prev                           : signed(13 DOWNTO 0);  -- sfix14_En12
  SIGNAL p8tmp_cast                       : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL p8tmp_mul_temp                   : signed(28 DOWNTO 0);  -- sfix29_En26
  SIGNAL p8tmp_add_cast                   : signed(27 DOWNTO 0);  -- sfix28_En26
  SIGNAL p8tmp_add_cast_1                 : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL p8tmp_mul_temp_1                 : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL p8tmp_add_cast_2                 : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL p8tmp_add_temp                   : signed(29 DOWNTO 0);  -- sfix30_En26
  SIGNAL p8tmp_sub_cast                   : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL p8tmp_mul_temp_2                 : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL p8tmp_sub_cast_1                 : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL p8tmp_sub_temp                   : signed(30 DOWNTO 0);  -- sfix31_En26

BEGIN
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --          Generated by MATLAB 24.2 and Fixed-Point Designer 24.2          %
  --                                                                          %
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- Derivative Filter Algorithm for HDL Coder
  -- Implements the filter: H(z) = G * (1/T) * [1 - z^-1] / [1 - 0.995z^-1]
  -- Filter coefficients (pre-calculated)
  -- Normalization gain
  -- denominator coefficient
  -- numerator coefficients
  -- Implement the difference equation:
  -- y(n) = b0*x(n) + b1*x(n-1) - a1*y(n-1)
  s <= to_unsigned(16#3FD7#, 14);

  input_signal_signed <= signed(input_signal);

  s_1 <= to_signed(-16#1FEC#, 14);

  enb <= clk_enable;

  x_prev_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      x_prev <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        x_prev <= input_signal_signed;
      END IF;
    END IF;
  END PROCESS x_prev_reg_process;


  s_2 <= to_signed(-16#1FD8#, 14);

  y_prev_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y_prev <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        y_prev <= tmp;
      END IF;
    END IF;
  END PROCESS y_prev_reg_process;


  -- Update persistent variables for next iteration
  p8tmp_cast <= signed(resize(s, 15));
  p8tmp_mul_temp <= p8tmp_cast * input_signal_signed;
  p8tmp_add_cast <= p8tmp_mul_temp(27 DOWNTO 0);
  p8tmp_add_cast_1 <= resize(p8tmp_add_cast, 30);
  p8tmp_mul_temp_1 <= s_1 * x_prev;
  p8tmp_add_cast_2 <= resize(p8tmp_mul_temp_1 & '0', 30);
  p8tmp_add_temp <= p8tmp_add_cast_1 + p8tmp_add_cast_2;
  p8tmp_sub_cast <= resize(p8tmp_add_temp, 31);
  p8tmp_mul_temp_2 <= s_2 * y_prev;
  p8tmp_sub_cast_1 <= resize(p8tmp_mul_temp_2 & '0', 31);
  p8tmp_sub_temp <= p8tmp_sub_cast - p8tmp_sub_cast_1;
  tmp <= p8tmp_sub_temp(27 DOWNTO 14);

  filtered_output <= std_logic_vector(tmp);

  ce_out <= clk_enable;

END rtl;


